<!DOCTYPE html>
<html lang="en">
<head>
  <title>Line Charts</title>
  <meta charset="utf-8">
  <script type="text/javascript" src="../lib/d3.v5.min.js"></script>
  <style>
      body { font-family: Arial, sans-serif; }
      .chart-container { text-align: center; }
      .axis-label { font-size: 14px; }
  </style>
</head>
<body>
  <h1>Number of Ratings 2016-2020</h1>
  <div class="chart-container">
    <svg id="chart" width="900" height="500"></svg>
  </div>
  <div id='signature'>rgandhi48</div>

  <script>
    // Set margins and dimensions
    const margin = { top: 40, right: 120, bottom: 50, left: 60 },
          width = 900 - margin.left - margin.right,
          height = 500 - margin.top - margin.bottom;

    // Create SVG element
    const svg = d3.select("#chart")
                  .append("g")
                  .attr("transform", `translate(${margin.left},${margin.top})`);

    // Define color scale
    const color = d3.scaleOrdinal(d3.schemeCategory10);

    // Load data
    d3.csv("boardgame_ratings.csv").then(function(data) {
      data.forEach(d => d.date = new Date(d.date));

      const games = ['Catan', 'Dominion', 'Codenames', 'Terraforming Mars', 'Gloomhaven', 'Magic: The Gathering', 'Dixit', 'Monopoly'];

      // Scales
      const xScale = d3.scaleTime()
                       .domain(d3.extent(data, d => d.date))
                       .range([0, width]);

      const yScale = d3.scaleLinear()
                       .domain([0, d3.max(data, d => d3.max(games, game => +d[`${game}=count`]))])
                       .range([height, 0]);

      // Axes
      const xAxis = d3.axisBottom(xScale)
                      .ticks(d3.timeMonth.every(3))
                      .tickFormat(d3.timeFormat("%b %y"));

      const yAxis = d3.axisLeft(yScale);

      svg.append("g")
         .attr("transform", `translate(0, ${height})`)
         .call(xAxis)
         .append("text")
         .attr("x", width / 2)
         .attr("y", 40)
         .attr("fill", "black")
         .attr("text-anchor", "middle")
         .attr("class", "axis-label")
         .text("Month");

      svg.append("g")
         .call(yAxis)
         .append("text")
         .attr("transform", "rotate(-90)")
         .attr("x", -height / 2)
         .attr("y", -50)
         .attr("fill", "black")
         .attr("text-anchor", "middle")
         .attr("class", "axis-label")
         .text("Number of Ratings");

      // Line generator
      const line = d3.line()
                     .x(d => xScale(d.date))
                     .y((d, i, nodes) => yScale(+nodes[i][1]))
                     .curve(d3.curveMonotoneX);

      // Draw lines for each game
      games.forEach((game, i) => {
        svg.append("path")
           .datum(data)
           .attr("fill", "none")
           .attr("stroke", color(game))
           .attr("stroke-width", 2)
           .attr("d", line.y(d => yScale(+d[`${game}=count`])));

        // Add game labels
        svg.append("text")
           .attr("x", width - 50)
           .attr("y", yScale(+data[data.length - 1][`${game}=count`]))
           .attr("fill", color(game))
           .text(game);
      });
    });
  </script>
</body>
</html>
